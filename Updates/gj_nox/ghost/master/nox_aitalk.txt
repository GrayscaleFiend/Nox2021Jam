//******************************************************************************
// YAYA　ゴーストテンプレート
// トーク辞書
//******************************************************************************


//******************************************************************************
// ランダムトーク
//******************************************************************************
RandomTalk
{
    TOSTR(EVAL(CHR(0x22)+RandomTalkEx()+CHR(0x22)))
}

//------------------------------------------------------------------------------
//ランダムトーク本体：この中にランダムトークを記載してください
//ここのみ常に ' ' で括って書いてください。
//上のRandomTalkの中身で%( )を展開していますので、" "を使わなくてもOKです。
//高速化対策
//------------------------------------------------------------------------------
RandomTalkEx : nonoverlap
{
	"\b1"
	--
	"%(noxNeutral)Placeholder randomtalk.\e"
}

//------------------------------------------------------------------------------
//Chains
//------------------------------------------------------------------------------
siritori
{{CHAIN
	"%(noxNeutral)\e"
}}CHAIN


//******************************************************************************
//Key pressed
//******************************************************************************
/*
//------------------------------------------------------------------------------
//OnKeyPress
//------------------------------------------------------------------------------
// This event fires when any key on the keyboard is pressed.
// When specifying the function key, specify "f1" etc.
// The pressed key is stored in reference0.
//It is better to branch with // if statement or case ~ when statement.
*/

OnKeyPress
{
	case reference0 {
		when "t" {
			'\![raise,OnAiTalk]'
		}
		when "r" {
			'\![reload,shiori](RELOAD SHIORI)'
		}
		when "m" {
			if ISFUNC('OpenMenu') {
				OpenMenu
			}
			else {
				'\![raise,OnMouseDoubleClick,0,0,0,0,__SYSTEM_KEYDOWN_COL,0,mouse]'
			}
		}
		when "p"{
			relationship++
			"%relationship\e"
		}
		when "-"{
			relationship--
			"%relationship\e"
		}
	}
}

//******************************************************************************
//時報/重なり
//******************************************************************************

//------------------------------------------------------------------------------
//OnMinuteChangeイベント
//------------------------------------------------------------------------------

OnMinuteChange
{
	"\b1"
	--
	//Minute checks
	
	if relationship > POSITIVER3{
		cdmultiplier = 3
		waspositive = 1
		
	}elseif relationship > POSITIVER2{
		cdmultiplier = 2
	
	}elseif relationship < ANNOYEDR3{
		cdmultiplier = 1
		wasnegative = 1
	
	}elseif relationship < ANNOYEDR2{
		cdmultiplier = 1
	
	}else{
		cdmultiplier = 1
	}
	
	
	
	
	
	
	--
	//---- When it's a new hour
	if minute == 0
	{
		//variables
		questioncooldown = 0
		petthishour = 0
		
		//can be turned off in settings
		if hourannounce > 1{
			"%(noxNeutral)"
			--
			//---- 特定の時間（正午など）ではさらに追加で話す
			if hour == 0
			{
				"Midnight."
			}
			elseif hour == 1
			{
				"1 AM, you good?"
			}
			elseif hour == 12
			{
				"%(noxNeutral)It's lunchtime."
			}
			else
			{
				"%(noxNeutral)It's %hour12."
			}
			--
			"\e"
		}
	}
	elseif AYATEMPLATE.mikireflag == 1
	{
		//---- 分 != 0 、かつ見切れていたら見切れ中のトークを行う
		MikireTalk
	}
	elseif reference[2] == 1
	{
		//---- 分 != 0 、かつ見切れておらず本体とkeroが重なっていたら重なり処理
		//---- 大抵はkero側を引き離す処理を行う
		"%(noxNeutral)Overlapping hopefully nonexistent kero.\4\e"
	}
}


//******************************************************************************
//見切れ
//******************************************************************************

//------------------------------------------------------------------------------
//OnSecondChangeイベント
//1 秒毎に実行される。ここではあまり重い処理を行わないこと
//このテンプレートでは、見切れ処理のみ行っている
//---------------------------------------------------------------------------
OnSecondChange
{

	if AYATEMPLATE.mikireflag == 1 && reference[1] == 0
	{
		//---- 見切れの終了
		EndMikireTalk
	}
	AYATEMPLATE.mikireflag = reference[1]
}

//------------------------------------------------------------------------------
//見切れ中
//------------------------------------------------------------------------------
MikireTalk : nonoverlap
{
	if offscreen == 0{
		offscreen = 1
		relationship -= RAND(5) + 1
	}
	if relationship > ANNOYEDR2{
		{
			"%(noxCurious)Would you mind moving me more onto the lighted area? It is pitch black beyond that border."
			"%(noxNeutral)I would much rather be in full view, if you wouldn't mind."
			"%(noxNeutral)Don't you think it would be better to see all of me?"
		}
		{
			"%(noxNeutral)I would like to be in the lighted area, if you would please."
			"%(noxCurious)If you wouldn't mind, could you move me into the lighted area?"
			"%(noxNarCurious)%(noxEyesClosed)(He looks nervous for some reason.)"
		}
		
		if relationship > POSITIVER1{
			"%(noxCurious)Hey… I don't like being in this darker area."
			"%(noxCurious)I don't want to be in the dark. Could you move me?"
		
		}
		
	
	}
	
	if relationship < ANNOYEDR1{
		"%(noxAnnoyed)If you are going to keep me here, could you at least move me into the lighted area?"
		"%(noxAnnoyed)I want to keep an eye on you. Can you move me to do just that?"
		"%(noxNarAnnoyed)%(noxEyesClosed)(He looks like he's nervous.)"

	
	}
	--
	"\e"
}

//------------------------------------------------------------------------------
//見切れ終了
//------------------------------------------------------------------------------
EndMikireTalk
{
	offscreen = 0
	"%(noxNeutral)No longer offscreen.\e:chain=mikirego"
}


//------------------------------------------------------------------------------
//見切れ後の初回のランダムトークは見切れ関連のトークを行う。
//これをチェインで実現している
//------------------------------------------------------------------------------
mikirego
{{CHAIN
	"%(noxNeutral)Being offscreen is weird.\e"

}}CHAIN

//******************************************************************************
//サーフィス復元
//******************************************************************************

//------------------------------------------------------------------------------
//OnSurfaceRestoreイベント
//------------------------------------------------------------------------------
OnSurfaceRestore
{
	if relationship < ANNOYEDR2{
		"\1\s[-1]%(noxAnnoyed)\e"
	}else{
	
		"\1\s[-1]%(noxNeutral)\e"
	}
	
}

//******************************************************************************
//トランスレータ
//******************************************************************************

//------------------------------------------------------------------------------
//OnTranslateイベント
//------------------------------------------------------------------------------
//もっとも単純な例。語尾変え（「。」→「にゅ。」）。
//動かないようにコメントアウトしています。

//the OnTranslate function so that script input debug can actually happen
OnTranslate
{
    _talk = reference0;
	
	if "\q" _in_ _talk{
	
	}else{
		_talk = REPLACE(_talk,". ",".\w[12] ")
		_talk = REPLACE(_talk,"? ","?\w[22] ")
		_talk = REPLACE(_talk,", ",",\w8 ")
	}
	
     
    if reference1 == "" && reference2 == ""
    { //send input box : no event (ref2) , no special flag (ref1)
        EVAL('"' + REPLACE(_talk,'"','" + CHR(0x22) + "') + '"')
    }
    else
    { //event result from ghost
        TOSTR(_talk);
    }
}
//"
//above comment is bc my code styler is freakin out 

//------------------------------------------------------------------------------
//OnTranslateInternalイベント
//------------------------------------------------------------------------------
//OnTranslateがYAYA→本体→YAYAと、一度本体を経由するのに対して、
//OnTranslateInternalはYAYA内部でのトランスレートです。
//そのため、reference変数などが変更されない状態でこの関数に渡されます。
//引数は、_argv[0]が、本体に渡す寸前のトークの内容です。
//動かないようにコメントアウトしています。
/*
OnTranslateInternal
{
	_text = _argv[0]
	_text = REPLACE(_text, "。", "にゅ。")
	_text
}
*/
